@page "/products"
@inject IProductService productService

@if (Products is null)
{
	<p>Loading products...</p>
}
else
{
	<h3 class="mb-5">Products</h3>
	@if (Products.Count() > 0)
	{
		<div class="row mt-3">
			@foreach (var item in Products)
			{
				<div class="col-md-3 mb-2">
					<a href="#">
						<div class="card">
							<img class="img-thumbnail" src="@item.ImageURL" />
							<div class="card-body">
								<h5 class="card-title mb-3">
									@item.Price.ToString("c")
								</h5>
							</div>
						</div>
					</a>
				</div>
			}
		</div>
	}

}


@code {
	public IEnumerable<ProductDTO>? Products { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Products = await productService.GetItems();
	}
}
